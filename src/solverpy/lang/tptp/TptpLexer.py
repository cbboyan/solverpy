# Generated from Tptp.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,99,747,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,1,0,1,0,1,
        0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,
        1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,
        1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,
        1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,3,43,497,8,43,1,44,
        1,44,1,44,3,44,502,8,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,
        1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,51,3,51,520,8,51,1,52,1,52,
        1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,
        1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,61,1,61,
        1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,
        1,66,1,67,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,70,1,71,
        1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,75,
        1,75,1,76,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,80,
        1,81,1,81,1,81,1,81,1,82,1,82,3,82,608,8,82,1,83,1,83,1,83,1,84,
        1,84,3,84,615,8,84,1,85,1,85,3,85,619,8,85,1,86,1,86,1,86,1,87,1,
        87,1,87,1,87,1,88,1,88,3,88,630,8,88,1,89,1,89,1,89,1,90,1,90,1,
        91,1,91,3,91,639,8,91,1,92,1,92,5,92,643,8,92,10,92,12,92,646,9,
        92,1,93,1,93,3,93,650,8,93,1,93,1,93,1,93,1,94,1,94,1,94,1,95,1,
        95,1,95,5,95,661,8,95,10,95,12,95,664,9,95,1,96,1,96,3,96,668,8,
        96,1,97,1,97,1,97,1,98,1,98,5,98,675,8,98,10,98,12,98,678,9,98,1,
        99,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,101,1,101,5,101,690,
        8,101,10,101,12,101,693,9,101,1,102,1,102,5,102,697,8,102,10,102,
        12,102,700,9,102,1,103,1,103,4,103,704,8,103,11,103,12,103,705,1,
        103,1,103,1,104,1,104,4,104,712,8,104,11,104,12,104,713,1,104,1,
        104,1,105,4,105,719,8,105,11,105,12,105,720,1,105,1,105,1,106,1,
        106,5,106,727,8,106,10,106,12,106,730,9,106,1,106,1,106,1,107,1,
        107,1,107,1,107,5,107,738,8,107,10,107,12,107,741,9,107,1,107,1,
        107,1,107,1,107,1,107,1,739,0,108,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,0,
        105,44,107,45,109,46,111,47,113,48,115,49,117,50,119,51,121,52,123,
        53,125,54,127,55,129,56,131,57,133,58,135,59,137,60,139,61,141,62,
        143,63,145,64,147,65,149,66,151,67,153,68,155,69,157,70,159,71,161,
        72,163,73,165,74,167,75,169,76,171,77,173,78,175,79,177,80,179,81,
        181,82,183,83,185,84,187,85,189,86,191,87,193,88,195,89,197,90,199,
        91,201,92,203,93,205,94,207,95,209,96,211,97,213,98,215,99,1,0,12,
        3,0,32,33,35,91,93,126,2,0,34,34,92,92,3,0,32,38,40,91,93,126,2,
        0,39,39,92,92,2,0,43,43,45,45,2,0,69,69,101,101,1,0,49,57,1,0,48,
        57,1,0,97,122,1,0,65,90,3,0,9,10,13,13,32,32,2,0,10,10,13,13,759,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,
        109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
        0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,
        1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
        0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
        0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
        155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,
        0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,
        1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,
        0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,
        0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,
        201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,
        0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,1,217,1,0,0,0,3,222,
        1,0,0,0,5,224,1,0,0,0,7,227,1,0,0,0,9,232,1,0,0,0,11,237,1,0,0,0,
        13,242,1,0,0,0,15,247,1,0,0,0,17,252,1,0,0,0,19,257,1,0,0,0,21,259,
        1,0,0,0,23,261,1,0,0,0,25,263,1,0,0,0,27,265,1,0,0,0,29,267,1,0,
        0,0,31,273,1,0,0,0,33,279,1,0,0,0,35,282,1,0,0,0,37,285,1,0,0,0,
        39,287,1,0,0,0,41,289,1,0,0,0,43,297,1,0,0,0,45,306,1,0,0,0,47,315,
        1,0,0,0,49,323,1,0,0,0,51,332,1,0,0,0,53,341,1,0,0,0,55,352,1,0,
        0,0,57,364,1,0,0,0,59,370,1,0,0,0,61,378,1,0,0,0,63,387,1,0,0,0,
        65,400,1,0,0,0,67,408,1,0,0,0,69,416,1,0,0,0,71,429,1,0,0,0,73,441,
        1,0,0,0,75,454,1,0,0,0,77,463,1,0,0,0,79,469,1,0,0,0,81,475,1,0,
        0,0,83,481,1,0,0,0,85,487,1,0,0,0,87,496,1,0,0,0,89,501,1,0,0,0,
        91,503,1,0,0,0,93,505,1,0,0,0,95,507,1,0,0,0,97,509,1,0,0,0,99,511,
        1,0,0,0,101,513,1,0,0,0,103,519,1,0,0,0,105,521,1,0,0,0,107,523,
        1,0,0,0,109,525,1,0,0,0,111,529,1,0,0,0,113,532,1,0,0,0,115,535,
        1,0,0,0,117,539,1,0,0,0,119,542,1,0,0,0,121,545,1,0,0,0,123,547,
        1,0,0,0,125,550,1,0,0,0,127,553,1,0,0,0,129,556,1,0,0,0,131,558,
        1,0,0,0,133,560,1,0,0,0,135,563,1,0,0,0,137,566,1,0,0,0,139,568,
        1,0,0,0,141,570,1,0,0,0,143,574,1,0,0,0,145,577,1,0,0,0,147,581,
        1,0,0,0,149,584,1,0,0,0,151,587,1,0,0,0,153,589,1,0,0,0,155,592,
        1,0,0,0,157,594,1,0,0,0,159,596,1,0,0,0,161,598,1,0,0,0,163,601,
        1,0,0,0,165,607,1,0,0,0,167,609,1,0,0,0,169,614,1,0,0,0,171,618,
        1,0,0,0,173,620,1,0,0,0,175,623,1,0,0,0,177,629,1,0,0,0,179,631,
        1,0,0,0,181,634,1,0,0,0,183,638,1,0,0,0,185,640,1,0,0,0,187,649,
        1,0,0,0,189,654,1,0,0,0,191,657,1,0,0,0,193,667,1,0,0,0,195,669,
        1,0,0,0,197,672,1,0,0,0,199,679,1,0,0,0,201,682,1,0,0,0,203,687,
        1,0,0,0,205,694,1,0,0,0,207,701,1,0,0,0,209,709,1,0,0,0,211,718,
        1,0,0,0,213,724,1,0,0,0,215,733,1,0,0,0,217,218,5,116,0,0,218,219,
        5,112,0,0,219,220,5,105,0,0,220,221,5,40,0,0,221,2,1,0,0,0,222,223,
        5,44,0,0,223,4,1,0,0,0,224,225,5,41,0,0,225,226,5,46,0,0,226,6,1,
        0,0,0,227,228,5,116,0,0,228,229,5,104,0,0,229,230,5,102,0,0,230,
        231,5,40,0,0,231,8,1,0,0,0,232,233,5,116,0,0,233,234,5,102,0,0,234,
        235,5,120,0,0,235,236,5,40,0,0,236,10,1,0,0,0,237,238,5,116,0,0,
        238,239,5,102,0,0,239,240,5,102,0,0,240,241,5,40,0,0,241,12,1,0,
        0,0,242,243,5,116,0,0,243,244,5,99,0,0,244,245,5,102,0,0,245,246,
        5,40,0,0,246,14,1,0,0,0,247,248,5,102,0,0,248,249,5,111,0,0,249,
        250,5,102,0,0,250,251,5,40,0,0,251,16,1,0,0,0,252,253,5,99,0,0,253,
        254,5,110,0,0,254,255,5,102,0,0,255,256,5,40,0,0,256,18,1,0,0,0,
        257,258,5,40,0,0,258,20,1,0,0,0,259,260,5,41,0,0,260,22,1,0,0,0,
        261,262,5,91,0,0,262,24,1,0,0,0,263,264,5,93,0,0,264,26,1,0,0,0,
        265,266,5,58,0,0,266,28,1,0,0,0,267,268,5,36,0,0,268,269,5,105,0,
        0,269,270,5,116,0,0,270,271,5,101,0,0,271,272,5,40,0,0,272,30,1,
        0,0,0,273,274,5,36,0,0,274,275,5,108,0,0,275,276,5,101,0,0,276,277,
        5,116,0,0,277,278,5,40,0,0,278,32,1,0,0,0,279,280,5,91,0,0,280,281,
        5,93,0,0,281,34,1,0,0,0,282,283,5,123,0,0,283,284,5,125,0,0,284,
        36,1,0,0,0,285,286,5,123,0,0,286,38,1,0,0,0,287,288,5,125,0,0,288,
        40,1,0,0,0,289,290,5,36,0,0,290,291,5,105,0,0,291,292,5,116,0,0,
        292,293,5,101,0,0,293,294,5,95,0,0,294,295,5,102,0,0,295,296,5,40,
        0,0,296,42,1,0,0,0,297,298,5,36,0,0,298,299,5,108,0,0,299,300,5,
        101,0,0,300,301,5,116,0,0,301,302,5,95,0,0,302,303,5,116,0,0,303,
        304,5,102,0,0,304,305,5,40,0,0,305,44,1,0,0,0,306,307,5,36,0,0,307,
        308,5,108,0,0,308,309,5,101,0,0,309,310,5,116,0,0,310,311,5,95,0,
        0,311,312,5,102,0,0,312,313,5,102,0,0,313,314,5,40,0,0,314,46,1,
        0,0,0,315,316,5,36,0,0,316,317,5,105,0,0,317,318,5,116,0,0,318,319,
        5,101,0,0,319,320,5,95,0,0,320,321,5,116,0,0,321,322,5,40,0,0,322,
        48,1,0,0,0,323,324,5,36,0,0,324,325,5,108,0,0,325,326,5,101,0,0,
        326,327,5,116,0,0,327,328,5,95,0,0,328,329,5,102,0,0,329,330,5,116,
        0,0,330,331,5,40,0,0,331,50,1,0,0,0,332,333,5,36,0,0,333,334,5,108,
        0,0,334,335,5,101,0,0,335,336,5,116,0,0,336,337,5,95,0,0,337,338,
        5,116,0,0,338,339,5,116,0,0,339,340,5,40,0,0,340,52,1,0,0,0,341,
        342,5,105,0,0,342,343,5,110,0,0,343,344,5,102,0,0,344,345,5,101,
        0,0,345,346,5,114,0,0,346,347,5,101,0,0,347,348,5,110,0,0,348,349,
        5,99,0,0,349,350,5,101,0,0,350,351,5,40,0,0,351,54,1,0,0,0,352,353,
        5,105,0,0,353,354,5,110,0,0,354,355,5,116,0,0,355,356,5,114,0,0,
        356,357,5,111,0,0,357,358,5,100,0,0,358,359,5,117,0,0,359,360,5,
        99,0,0,360,361,5,101,0,0,361,362,5,100,0,0,362,363,5,40,0,0,363,
        56,1,0,0,0,364,365,5,102,0,0,365,366,5,105,0,0,366,367,5,108,0,0,
        367,368,5,101,0,0,368,369,5,40,0,0,369,58,1,0,0,0,370,371,5,116,
        0,0,371,372,5,104,0,0,372,373,5,101,0,0,373,374,5,111,0,0,374,375,
        5,114,0,0,375,376,5,121,0,0,376,377,5,40,0,0,377,60,1,0,0,0,378,
        379,5,99,0,0,379,380,5,114,0,0,380,381,5,101,0,0,381,382,5,97,0,
        0,382,383,5,116,0,0,383,384,5,111,0,0,384,385,5,114,0,0,385,386,
        5,40,0,0,386,62,1,0,0,0,387,388,5,100,0,0,388,389,5,101,0,0,389,
        390,5,115,0,0,390,391,5,99,0,0,391,392,5,114,0,0,392,393,5,105,0,
        0,393,394,5,112,0,0,394,395,5,116,0,0,395,396,5,105,0,0,396,397,
        5,111,0,0,397,398,5,110,0,0,398,399,5,40,0,0,399,64,1,0,0,0,400,
        401,5,105,0,0,401,402,5,113,0,0,402,403,5,117,0,0,403,404,5,111,
        0,0,404,405,5,116,0,0,405,406,5,101,0,0,406,407,5,40,0,0,407,66,
        1,0,0,0,408,409,5,115,0,0,409,410,5,116,0,0,410,411,5,97,0,0,411,
        412,5,116,0,0,412,413,5,117,0,0,413,414,5,115,0,0,414,415,5,40,0,
        0,415,68,1,0,0,0,416,417,5,97,0,0,417,418,5,115,0,0,418,419,5,115,
        0,0,419,420,5,117,0,0,420,421,5,109,0,0,421,422,5,112,0,0,422,423,
        5,116,0,0,423,424,5,105,0,0,424,425,5,111,0,0,425,426,5,110,0,0,
        426,427,5,115,0,0,427,428,5,40,0,0,428,70,1,0,0,0,429,430,5,114,
        0,0,430,431,5,101,0,0,431,432,5,102,0,0,432,433,5,117,0,0,433,434,
        5,116,0,0,434,435,5,97,0,0,435,436,5,116,0,0,436,437,5,105,0,0,437,
        438,5,111,0,0,438,439,5,110,0,0,439,440,5,40,0,0,440,72,1,0,0,0,
        441,442,5,110,0,0,442,443,5,101,0,0,443,444,5,119,0,0,444,445,5,
        95,0,0,445,446,5,115,0,0,446,447,5,121,0,0,447,448,5,109,0,0,448,
        449,5,98,0,0,449,450,5,111,0,0,450,451,5,108,0,0,451,452,5,115,0,
        0,452,453,5,40,0,0,453,74,1,0,0,0,454,455,5,105,0,0,455,456,5,110,
        0,0,456,457,5,99,0,0,457,458,5,108,0,0,458,459,5,117,0,0,459,460,
        5,100,0,0,460,461,5,101,0,0,461,462,5,40,0,0,462,76,1,0,0,0,463,
        464,5,36,0,0,464,465,5,116,0,0,465,466,5,104,0,0,466,467,5,102,0,
        0,467,468,5,40,0,0,468,78,1,0,0,0,469,470,5,36,0,0,470,471,5,116,
        0,0,471,472,5,102,0,0,472,473,5,102,0,0,473,474,5,40,0,0,474,80,
        1,0,0,0,475,476,5,36,0,0,476,477,5,102,0,0,477,478,5,111,0,0,478,
        479,5,102,0,0,479,480,5,40,0,0,480,82,1,0,0,0,481,482,5,36,0,0,482,
        483,5,99,0,0,483,484,5,110,0,0,484,485,5,102,0,0,485,486,5,40,0,
        0,486,84,1,0,0,0,487,488,5,36,0,0,488,489,5,102,0,0,489,490,5,111,
        0,0,490,491,5,116,0,0,491,492,5,40,0,0,492,86,1,0,0,0,493,497,7,
        0,0,0,494,495,5,92,0,0,495,497,7,1,0,0,496,493,1,0,0,0,496,494,1,
        0,0,0,497,88,1,0,0,0,498,502,7,2,0,0,499,500,5,92,0,0,500,502,7,
        3,0,0,501,498,1,0,0,0,501,499,1,0,0,0,502,90,1,0,0,0,503,504,7,4,
        0,0,504,92,1,0,0,0,505,506,7,5,0,0,506,94,1,0,0,0,507,508,7,6,0,
        0,508,96,1,0,0,0,509,510,7,7,0,0,510,98,1,0,0,0,511,512,7,8,0,0,
        512,100,1,0,0,0,513,514,7,9,0,0,514,102,1,0,0,0,515,520,3,99,49,
        0,516,520,3,101,50,0,517,520,3,97,48,0,518,520,5,95,0,0,519,515,
        1,0,0,0,519,516,1,0,0,0,519,517,1,0,0,0,519,518,1,0,0,0,520,104,
        1,0,0,0,521,522,5,124,0,0,522,106,1,0,0,0,523,524,5,38,0,0,524,108,
        1,0,0,0,525,526,5,60,0,0,526,527,5,61,0,0,527,528,5,62,0,0,528,110,
        1,0,0,0,529,530,5,61,0,0,530,531,5,62,0,0,531,112,1,0,0,0,532,533,
        5,60,0,0,533,534,5,61,0,0,534,114,1,0,0,0,535,536,5,60,0,0,536,537,
        5,126,0,0,537,538,5,62,0,0,538,116,1,0,0,0,539,540,5,126,0,0,540,
        541,5,124,0,0,541,118,1,0,0,0,542,543,5,126,0,0,543,544,5,38,0,0,
        544,120,1,0,0,0,545,546,5,126,0,0,546,122,1,0,0,0,547,548,5,33,0,
        0,548,549,5,33,0,0,549,124,1,0,0,0,550,551,5,33,0,0,551,552,5,62,
        0,0,552,126,1,0,0,0,553,554,5,33,0,0,554,555,5,61,0,0,555,128,1,
        0,0,0,556,557,5,61,0,0,557,130,1,0,0,0,558,559,5,33,0,0,559,132,
        1,0,0,0,560,561,5,63,0,0,561,562,5,63,0,0,562,134,1,0,0,0,563,564,
        5,63,0,0,564,565,5,42,0,0,565,136,1,0,0,0,566,567,5,63,0,0,567,138,
        1,0,0,0,568,569,5,94,0,0,569,140,1,0,0,0,570,571,5,64,0,0,571,572,
        5,64,0,0,572,573,5,43,0,0,573,142,1,0,0,0,574,575,5,64,0,0,575,576,
        5,43,0,0,576,144,1,0,0,0,577,578,5,64,0,0,578,579,5,64,0,0,579,580,
        5,45,0,0,580,146,1,0,0,0,581,582,5,64,0,0,582,583,5,45,0,0,583,148,
        1,0,0,0,584,585,5,64,0,0,585,586,5,61,0,0,586,150,1,0,0,0,587,588,
        5,64,0,0,588,152,1,0,0,0,589,590,5,58,0,0,590,591,5,61,0,0,591,154,
        1,0,0,0,592,593,5,62,0,0,593,156,1,0,0,0,594,595,5,42,0,0,595,158,
        1,0,0,0,596,597,5,43,0,0,597,160,1,0,0,0,598,599,5,60,0,0,599,600,
        5,60,0,0,600,162,1,0,0,0,601,602,5,45,0,0,602,603,5,45,0,0,603,604,
        5,62,0,0,604,164,1,0,0,0,605,608,3,167,83,0,606,608,3,169,84,0,607,
        605,1,0,0,0,607,606,1,0,0,0,608,166,1,0,0,0,609,610,3,91,45,0,610,
        611,3,169,84,0,611,168,1,0,0,0,612,615,3,189,94,0,613,615,3,187,
        93,0,614,612,1,0,0,0,614,613,1,0,0,0,615,170,1,0,0,0,616,619,3,173,
        86,0,617,619,3,175,87,0,618,616,1,0,0,0,618,617,1,0,0,0,619,172,
        1,0,0,0,620,621,3,91,45,0,621,622,3,175,87,0,622,174,1,0,0,0,623,
        624,3,183,91,0,624,625,5,47,0,0,625,626,3,185,92,0,626,176,1,0,0,
        0,627,630,3,179,89,0,628,630,3,181,90,0,629,627,1,0,0,0,629,628,
        1,0,0,0,630,178,1,0,0,0,631,632,3,91,45,0,632,633,3,181,90,0,633,
        180,1,0,0,0,634,635,3,183,91,0,635,182,1,0,0,0,636,639,5,48,0,0,
        637,639,3,185,92,0,638,636,1,0,0,0,638,637,1,0,0,0,639,184,1,0,0,
        0,640,644,3,95,47,0,641,643,3,97,48,0,642,641,1,0,0,0,643,646,1,
        0,0,0,644,642,1,0,0,0,644,645,1,0,0,0,645,186,1,0,0,0,646,644,1,
        0,0,0,647,650,3,183,91,0,648,650,3,189,94,0,649,647,1,0,0,0,649,
        648,1,0,0,0,650,651,1,0,0,0,651,652,3,93,46,0,652,653,3,193,96,0,
        653,188,1,0,0,0,654,655,3,183,91,0,655,656,3,191,95,0,656,190,1,
        0,0,0,657,658,5,46,0,0,658,662,3,97,48,0,659,661,3,97,48,0,660,659,
        1,0,0,0,661,664,1,0,0,0,662,660,1,0,0,0,662,663,1,0,0,0,663,192,
        1,0,0,0,664,662,1,0,0,0,665,668,3,195,97,0,666,668,3,197,98,0,667,
        665,1,0,0,0,667,666,1,0,0,0,668,194,1,0,0,0,669,670,3,91,45,0,670,
        671,3,197,98,0,671,196,1,0,0,0,672,676,3,97,48,0,673,675,3,97,48,
        0,674,673,1,0,0,0,675,678,1,0,0,0,676,674,1,0,0,0,676,677,1,0,0,
        0,677,198,1,0,0,0,678,676,1,0,0,0,679,680,5,36,0,0,680,681,3,205,
        102,0,681,200,1,0,0,0,682,683,5,36,0,0,683,684,5,36,0,0,684,685,
        1,0,0,0,685,686,3,205,102,0,686,202,1,0,0,0,687,691,3,101,50,0,688,
        690,3,103,51,0,689,688,1,0,0,0,690,693,1,0,0,0,691,689,1,0,0,0,691,
        692,1,0,0,0,692,204,1,0,0,0,693,691,1,0,0,0,694,698,3,99,49,0,695,
        697,3,103,51,0,696,695,1,0,0,0,697,700,1,0,0,0,698,696,1,0,0,0,698,
        699,1,0,0,0,699,206,1,0,0,0,700,698,1,0,0,0,701,703,5,39,0,0,702,
        704,3,89,44,0,703,702,1,0,0,0,704,705,1,0,0,0,705,703,1,0,0,0,705,
        706,1,0,0,0,706,707,1,0,0,0,707,708,5,39,0,0,708,208,1,0,0,0,709,
        711,5,34,0,0,710,712,3,87,43,0,711,710,1,0,0,0,712,713,1,0,0,0,713,
        711,1,0,0,0,713,714,1,0,0,0,714,715,1,0,0,0,715,716,5,34,0,0,716,
        210,1,0,0,0,717,719,7,10,0,0,718,717,1,0,0,0,719,720,1,0,0,0,720,
        718,1,0,0,0,720,721,1,0,0,0,721,722,1,0,0,0,722,723,6,105,0,0,723,
        212,1,0,0,0,724,728,5,37,0,0,725,727,8,11,0,0,726,725,1,0,0,0,727,
        730,1,0,0,0,728,726,1,0,0,0,728,729,1,0,0,0,729,731,1,0,0,0,730,
        728,1,0,0,0,731,732,6,106,0,0,732,214,1,0,0,0,733,734,5,47,0,0,734,
        735,5,42,0,0,735,739,1,0,0,0,736,738,9,0,0,0,737,736,1,0,0,0,738,
        741,1,0,0,0,739,740,1,0,0,0,739,737,1,0,0,0,740,742,1,0,0,0,741,
        739,1,0,0,0,742,743,5,42,0,0,743,744,5,47,0,0,744,745,1,0,0,0,745,
        746,6,107,0,0,746,216,1,0,0,0,21,0,496,501,519,607,614,618,629,638,
        644,649,662,667,676,691,698,705,713,720,728,739,1,6,0,0
    ]

class TptpLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    Or = 44
    And = 45
    Iff = 46
    Impl = 47
    If = 48
    Niff = 49
    Nor = 50
    Nand = 51
    Not = 52
    ForallComb = 53
    TyForall = 54
    Infix_inequality = 55
    Infix_equality = 56
    Forall = 57
    ExistsComb = 58
    TyExists = 59
    Exists = 60
    Lambda = 61
    ChoiceComb = 62
    Choice = 63
    DescriptionComb = 64
    Description = 65
    EqComb = 66
    App = 67
    Assignment = 68
    Arrow = 69
    Star = 70
    Plus = 71
    Subtype_sign = 72
    Gentzen_arrow = 73
    Real = 74
    Signed_real = 75
    Unsigned_real = 76
    Rational = 77
    Signed_rational = 78
    Unsigned_rational = 79
    Integer = 80
    Signed_integer = 81
    Unsigned_integer = 82
    Decimal = 83
    Positive_decimal = 84
    Decimal_exponent = 85
    Decimal_fraction = 86
    Dot_decimal = 87
    Exp_integer = 88
    Signed_exp_integer = 89
    Unsigned_exp_integer = 90
    Dollar_word = 91
    Dollar_dollar_word = 92
    Upper_word = 93
    Lower_word = 94
    Single_quoted = 95
    Distinct_object = 96
    WS = 97
    Line_comment = 98
    Block_comment = 99

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'tpi('", "','", "').'", "'thf('", "'tfx('", "'tff('", "'tcf('", 
            "'fof('", "'cnf('", "'('", "')'", "'['", "']'", "':'", "'$ite('", 
            "'$let('", "'[]'", "'{}'", "'{'", "'}'", "'$ite_f('", "'$let_tf('", 
            "'$let_ff('", "'$ite_t('", "'$let_ft('", "'$let_tt('", "'inference('", 
            "'introduced('", "'file('", "'theory('", "'creator('", "'description('", 
            "'iquote('", "'status('", "'assumptions('", "'refutation('", 
            "'new_symbols('", "'include('", "'$thf('", "'$tff('", "'$fof('", 
            "'$cnf('", "'$fot('", "'|'", "'&'", "'<=>'", "'=>'", "'<='", 
            "'<~>'", "'~|'", "'~&'", "'~'", "'!!'", "'!>'", "'!='", "'='", 
            "'!'", "'??'", "'?*'", "'?'", "'^'", "'@@+'", "'@+'", "'@@-'", 
            "'@-'", "'@='", "'@'", "':='", "'>'", "'*'", "'+'", "'<<'", 
            "'-->'" ]

    symbolicNames = [ "<INVALID>",
            "Or", "And", "Iff", "Impl", "If", "Niff", "Nor", "Nand", "Not", 
            "ForallComb", "TyForall", "Infix_inequality", "Infix_equality", 
            "Forall", "ExistsComb", "TyExists", "Exists", "Lambda", "ChoiceComb", 
            "Choice", "DescriptionComb", "Description", "EqComb", "App", 
            "Assignment", "Arrow", "Star", "Plus", "Subtype_sign", "Gentzen_arrow", 
            "Real", "Signed_real", "Unsigned_real", "Rational", "Signed_rational", 
            "Unsigned_rational", "Integer", "Signed_integer", "Unsigned_integer", 
            "Decimal", "Positive_decimal", "Decimal_exponent", "Decimal_fraction", 
            "Dot_decimal", "Exp_integer", "Signed_exp_integer", "Unsigned_exp_integer", 
            "Dollar_word", "Dollar_dollar_word", "Upper_word", "Lower_word", 
            "Single_quoted", "Distinct_object", "WS", "Line_comment", "Block_comment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "Do_char", 
                  "Sq_char", "Sign", "Exponent", "Non_zero_numeric", "Numeric", 
                  "Lower_alpha", "Upper_alpha", "Alpha_numeric", "Or", "And", 
                  "Iff", "Impl", "If", "Niff", "Nor", "Nand", "Not", "ForallComb", 
                  "TyForall", "Infix_inequality", "Infix_equality", "Forall", 
                  "ExistsComb", "TyExists", "Exists", "Lambda", "ChoiceComb", 
                  "Choice", "DescriptionComb", "Description", "EqComb", 
                  "App", "Assignment", "Arrow", "Star", "Plus", "Subtype_sign", 
                  "Gentzen_arrow", "Real", "Signed_real", "Unsigned_real", 
                  "Rational", "Signed_rational", "Unsigned_rational", "Integer", 
                  "Signed_integer", "Unsigned_integer", "Decimal", "Positive_decimal", 
                  "Decimal_exponent", "Decimal_fraction", "Dot_decimal", 
                  "Exp_integer", "Signed_exp_integer", "Unsigned_exp_integer", 
                  "Dollar_word", "Dollar_dollar_word", "Upper_word", "Lower_word", 
                  "Single_quoted", "Distinct_object", "WS", "Line_comment", 
                  "Block_comment" ]

    grammarFileName = "Tptp.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


